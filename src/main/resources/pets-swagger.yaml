openapi: 3.0.3
info:
  title: Pets API
  description: RESTful API for managing pets with CRUD operations
  version: 1.0.0

servers:
  - url: https://localhost:8080/v1

paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      responses:
        '200':
          description: A list of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PetDto'
    put:
      summary: Create a new pet
      operationId: createPet
      requestBody:
        description: Pet object to create
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PetDto'
                - type: object
                  required: [name, species]

      responses:
        '201':
          description: Pet created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetDto'

  /pets/{id}:
    get:
      summary: Get a pet by ID
      operationId: getPetById
      parameters:
        - name: id
          in: path
          description: ID of the pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Pet found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetDto'
        '404':
          description: Pet not found
    patch:
      summary: Update a pet by ID
      operationId: updatePet
      parameters:
        - name: id
          in: path
          description: ID of the pet to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updated pet object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDto'
      responses:
        '200':
          description: Pet updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetDto'
        '404':
          description: Pet not found
    delete:
      summary: Delete a pet by ID
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of the pet to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Pet deleted successfully
        '404':
          description: Pet not found

components:
  schemas:
    PetDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        species:
          type: string
        age:
          type: integer
          minimum: 0
        ownerName:
          type: string